# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-12-08 11:41
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
import hr.fields
import hr.models
import jsonfield.fields
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0011_auto_20161115_1510'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Allowance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sum_type', models.CharField(choices=[(b'AMOUNT', 'Amount'), (b'RATE', 'Rate')], max_length=50)),
                ('value', models.FloatField()),
                ('payment_cycle', models.CharField(choices=[(b'M', 'Monthly'), (b'Y', 'Yearly'), (b'D', 'Daily')], max_length=50)),
                ('year_payment_cycle_month', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(12), django.core.validators.MinValueValidator(1)])),
            ],
        ),
        migrations.CreateModel(
            name='AllowanceDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='AllowanceName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(max_length=250)),
                ('is_tax_free', models.BooleanField(default=False)),
                ('account_category', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.Category')),
            ],
        ),
        migrations.CreateModel(
            name='AllowanceValidity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valid_from', hr.fields.HRBSDateField()),
                ('note', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name_plural': 'Allowance Validities',
            },
        ),
        migrations.CreateModel(
            name='BranchOffice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=256)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='hr.BranchOffice')),
            ],
            options={
                'verbose_name': 'Office Branch',
                'verbose_name_plural': 'Office Branches',
            },
            managers=[
                ('_default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Deduction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deduct_type', models.CharField(choices=[(b'AMOUNT', 'Amount'), (b'RATE', 'Rate')], max_length=50)),
                ('value', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='DeductionDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField()),
                ('amount_added_before_deduction', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='DeductionName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
                ('description', models.CharField(max_length=150)),
                ('priority', models.IntegerField(unique=True)),
                ('first_add_to_salary', models.BooleanField(default=False)),
                ('is_tax_free', models.BooleanField(default=False)),
                ('is_optional', models.BooleanField(default=False)),
                ('amount_editable', models.BooleanField(default=False)),
                ('deduct_in_category', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.Category')),
            ],
        ),
        migrations.CreateModel(
            name='DeductionValidity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valid_from', hr.fields.HRBSDateField()),
                ('note', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name_plural': 'Deduction Validities',
            },
        ),
        migrations.CreateModel(
            name='Designation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation_name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[(b'ACTIVE', 'Active'), (b'INACTIVE', 'Inactive'), (b'SALARY_PUSED', 'Salary Paused')], default=b'ACTIVE', max_length=128)),
                ('budget_code', models.CharField(max_length=100)),
                ('pf_id_number', models.PositiveIntegerField(blank=True, null=True)),
                ('type', models.CharField(choices=[(b'PERMANENT', 'Permanent'), (b'TEMPORARY', 'Temporary')], max_length=128)),
                ('name', models.CharField(max_length=128)),
                ('sex', models.CharField(choices=[(b'M', 'Male'), (b'F', 'Female')], max_length=1)),
                ('marital_status', models.CharField(choices=[(b'M', 'Married'), (b'U', 'Unmarried')], default=b'U', max_length=1)),
                ('pan_number', models.CharField(max_length=100)),
                ('appoint_date', hr.fields.HRBSDateField(blank=True, null=True)),
                ('scale_start_date', hr.fields.HRBSDateField()),
                ('dismiss_date', hr.fields.HRBSDateField(blank=True, null=True)),
                ('yearly_insurance_premium', models.FloatField(default=0.0)),
                ('is_disabled_person', models.BooleanField(default=False)),
                ('grade_number', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employee_account', to='account.Account', validators=[hr.models.employee_account_validator])),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hr.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeFacility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('rate', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeGrade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade_name', models.CharField(max_length=100)),
                ('is_technical', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeGradeGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeGradeNumberPause',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_date', hr.fields.HRBSDateField()),
                ('to_date', hr.fields.HRBSDateField()),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grade_number_pause_details', to='hr.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeGradeScale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salary_scale', models.FloatField()),
                ('grade_number', models.PositiveIntegerField()),
                ('grade_rate', models.FloatField()),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grade_scales', to='hr.EmployeeGrade')),
            ],
        ),
        migrations.CreateModel(
            name='GradeScaleValidity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valid_from', hr.fields.HRBSDateField()),
                ('note', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name_plural': 'Grade Scale Validities',
            },
        ),
        migrations.CreateModel(
            name='Incentive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sum_type', models.CharField(choices=[(b'AMOUNT', 'Amount'), (b'RATE', 'Rate')], max_length=50)),
                ('value', models.FloatField(blank=True, null=True)),
                ('payment_cycle', models.CharField(choices=[(b'M', 'Monthly'), (b'Y', 'Yearly'), (b'D', 'Daily')], max_length=50)),
                ('year_payment_cycle_month', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(12), django.core.validators.MinValueValidator(1)])),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='IncentiveDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='IncentiveName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(max_length=250)),
                ('with_scale', models.BooleanField(default=False)),
                ('amount_editable', models.BooleanField(default=False)),
                ('is_tax_free', models.BooleanField(default=False)),
                ('account_category', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.Category')),
            ],
        ),
        migrations.CreateModel(
            name='IncomeTaxCalcScheme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_from', models.FloatField()),
                ('end_to', models.FloatField(blank=True, null=True)),
                ('tax_rate', models.FloatField()),
                ('priority', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='IncomeTaxScheme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_from', models.FloatField()),
                ('end_to', models.FloatField(blank=True, null=True)),
                ('priority', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='MaritalStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marital_status', models.CharField(choices=[(b'M', 'Married'), (b'U', 'Unmarried')], default=b'U', max_length=1, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paid_from_date', hr.fields.HRBSDateField()),
                ('paid_to_date', hr.fields.HRBSDateField()),
                ('absent_days', models.PositiveIntegerField()),
                ('allowance', models.FloatField(blank=True, null=True)),
                ('incentive', models.FloatField(blank=True, null=True)),
                ('deduced_amount', models.FloatField(blank=True, null=True)),
                ('salary', models.FloatField(blank=True, null=True)),
                ('paid_amount', models.FloatField()),
                ('allowance_details', models.ManyToManyField(blank=True, to='hr.AllowanceDetail')),
                ('deduction_details', models.ManyToManyField(blank=True, to='hr.DeductionDetail')),
                ('designation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr.Designation')),
                ('incentive_details', models.ManyToManyField(blank=True, to='hr.IncentiveDetail')),
                ('paid_employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='PayrollAccountant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch', mptt.fields.TreeForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payroll_accountants', to='hr.BranchOffice')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='payroll_accountant', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PayrollConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_can_generate_payroll', models.BooleanField(default=False)),
                ('hr_calendar', models.CharField(choices=[(b'BS', b'BS'), (b'AD', b'AD')], default=b'BS', max_length=2)),
                ('married_remuneration_discount', models.FloatField(default=300000.0, verbose_name='Remuneration tax discount for married employee on taxable amount.')),
                ('unmarried_remuneration_discount', models.FloatField(default=300000.0, verbose_name='Remuneration tax discount for married employee on taxable amount.')),
                ('disabled_remuneration_additional_discount', models.FloatField(default=50, verbose_name='Remuneration tax additional discount for disabled employee on taxable amount.(%)')),
                ('female_remuneration_tax_discount', models.FloatField(default=10, verbose_name='Discount for female on evaluated remuneration tax. (%)')),
                ('allowance_account_category', mptt.fields.TreeOneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='config_allowance', to='account.Category')),
                ('basic_salary_account_category', mptt.fields.TreeOneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='config_basic_salary', to='account.Category')),
                ('deduction_account_category', mptt.fields.TreeOneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='config_deduction', to='account.Category')),
                ('incentive_account_category', mptt.fields.TreeOneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='config_incentive', to='account.Category')),
                ('pay_head_account_category', mptt.fields.TreeOneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='config_pay_head', to='account.Category')),
                ('pro_tempore_account_category', mptt.fields.TreeOneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='config_pro_tempore', to='account.Category')),
                ('salary_giving_account_category', mptt.fields.TreeOneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='config_salary_giving', to='account.Category')),
                ('tax_account_category', mptt.fields.TreeOneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='config_tax', to='account.Category')),
            ],
            options={
                'verbose_name': 'Payroll Configuration',
            },
        ),
        migrations.CreateModel(
            name='PayrollEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paid_from_date', hr.fields.HRBSDateField()),
                ('paid_to_date', hr.fields.HRBSDateField()),
                ('is_monthly_payroll', models.BooleanField(default=False)),
                ('entry_datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('approved', models.BooleanField(default=False)),
                ('transacted', models.BooleanField(default=False)),
                ('branch', mptt.fields.TreeForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payroll_entries', to='hr.BranchOffice')),
                ('entry_rows', models.ManyToManyField(to='hr.PaymentRecord')),
            ],
        ),
        migrations.CreateModel(
            name='ProTempore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appoint_date', hr.fields.HRBSDateField(default=hr.fields.today)),
                ('dismiss_date', hr.fields.HRBSDateField(blank=True, null=True)),
                ('status', models.CharField(choices=[(b'REGISTERED', 'Registered'), (b'READY_FOR_PAYMENT', 'Ready for Payment'), (b'PAID', 'Paid')], default=b'REGISTERED', max_length=128)),
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='real_employee_post', to='hr.Employee')),
                ('pro_tempore_employee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='virtual_employee_post', to='hr.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='ProTemporeDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField()),
                ('pro_tempore', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pro_tempore_record', to='hr.ProTempore')),
            ],
        ),
        migrations.CreateModel(
            name='ReportHR',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=100)),
                ('template', models.FilePathField(match=b'.*\\.html$', path=b'/home/wrufesh/git/nerp/hr/templates/report_templates')),
                ('for_employee_type', models.CharField(choices=[(b'PERMANENT', 'Permanent'), (b'TEMPORARY', 'Temporary'), (b'ALL', 'All Type')], max_length=50)),
                ('deduction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='hr.DeductionName')),
            ],
        ),
        migrations.CreateModel(
            name='ReportTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('table_fields', jsonfield.fields.JSONField()),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='report_tables', to='hr.ReportHR')),
            ],
        ),
        migrations.CreateModel(
            name='TaxDeduction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(max_length=256)),
                ('account_category', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.Category')),
            ],
        ),
        migrations.CreateModel(
            name='TaxDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField()),
                ('tax_deduction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tax_details', to='hr.TaxDeduction')),
            ],
        ),
        migrations.AddField(
            model_name='paymentrecord',
            name='pro_tempore_details',
            field=models.ManyToManyField(blank=True, to='hr.ProTemporeDetail'),
        ),
        migrations.AddField(
            model_name='paymentrecord',
            name='tax_details',
            field=models.ManyToManyField(blank=True, to='hr.TaxDetail'),
        ),
        migrations.AddField(
            model_name='incometaxscheme',
            name='marital_status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tax_scheme', to='hr.MaritalStatus'),
        ),
        migrations.AddField(
            model_name='incometaxcalcscheme',
            name='scheme',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tax_calc_scheme', to='hr.IncomeTaxScheme'),
        ),
        migrations.AddField(
            model_name='incentivedetail',
            name='incentive',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incentive_amount_detail', to='hr.IncentiveName'),
        ),
        migrations.AddField(
            model_name='incentive',
            name='name',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='incentives', to='hr.IncentiveName'),
        ),
        migrations.AddField(
            model_name='employeegradescale',
            name='validity',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='grade_scales', to='hr.GradeScaleValidity'),
        ),
        migrations.AddField(
            model_name='employeegrade',
            name='grade_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employee_grades', to='hr.EmployeeGradeGroup'),
        ),
        migrations.AddField(
            model_name='employee',
            name='accounts',
            field=models.ManyToManyField(through='hr.EmployeeAccount', to='account.Account'),
        ),
        migrations.AddField(
            model_name='employee',
            name='allowances',
            field=models.ManyToManyField(blank=True, to='hr.AllowanceName'),
        ),
        migrations.AddField(
            model_name='employee',
            name='designation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr.Designation'),
        ),
        migrations.AddField(
            model_name='employee',
            name='facilities',
            field=models.ManyToManyField(blank=True, to='hr.EmployeeFacility'),
        ),
        migrations.AddField(
            model_name='employee',
            name='incentives',
            field=models.ManyToManyField(blank=True, through='hr.Incentive', to='hr.IncentiveName'),
        ),
        migrations.AddField(
            model_name='employee',
            name='optional_deductions',
            field=models.ManyToManyField(blank=True, to='hr.DeductionName'),
        ),
        migrations.AddField(
            model_name='employee',
            name='working_branch',
            field=mptt.fields.TreeForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='branch_employees', to='hr.BranchOffice'),
        ),
        migrations.AddField(
            model_name='designation',
            name='grade',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr.EmployeeGrade'),
        ),
        migrations.AddField(
            model_name='deductiondetail',
            name='deduction',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deduced_amount_detail', to='hr.DeductionName'),
        ),
        migrations.AddField(
            model_name='deduction',
            name='name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr.DeductionName'),
        ),
        migrations.AddField(
            model_name='deduction',
            name='validity',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hr.DeductionValidity'),
        ),
        migrations.AddField(
            model_name='allowancedetail',
            name='allowance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='allowance_amount_detail', to='hr.AllowanceName'),
        ),
        migrations.AddField(
            model_name='allowance',
            name='employee_grade',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr.EmployeeGrade'),
        ),
        migrations.AddField(
            model_name='allowance',
            name='name',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='allowances', to='hr.AllowanceName'),
        ),
        migrations.AddField(
            model_name='allowance',
            name='validity',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='allowances', to='hr.AllowanceValidity'),
        ),
        migrations.AlterUniqueTogether(
            name='incometaxscheme',
            unique_together=set([('marital_status', 'priority'), ('marital_status', 'start_from', 'end_to')]),
        ),
        migrations.AlterUniqueTogether(
            name='incometaxcalcscheme',
            unique_together=set([('scheme', 'priority'), ('scheme', 'start_from', 'end_to')]),
        ),
        migrations.AlterUniqueTogether(
            name='incentive',
            unique_together=set([('name', 'employee')]),
        ),
        migrations.AlterUniqueTogether(
            name='employeegradescale',
            unique_together=set([('validity', 'grade')]),
        ),
        migrations.AlterUniqueTogether(
            name='employeeaccount',
            unique_together=set([('employee', 'account')]),
        ),
        migrations.AlterUniqueTogether(
            name='allowance',
            unique_together=set([('name', 'employee_grade', 'validity')]),
        ),
    ]
